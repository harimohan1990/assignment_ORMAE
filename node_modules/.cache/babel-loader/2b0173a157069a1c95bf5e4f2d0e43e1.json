{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js\";\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost } from '../actions/postActions';\nimport { fetchComments } from '../actions/commentsActions';\nimport { Post } from '../components/Post';\nimport { Comment } from '../components/Comment';\n\nvar SinglePostPage = function SinglePostPage(_ref) {\n  var match = _ref.match,\n      dispatch = _ref.dispatch,\n      post = _ref.post,\n      comments = _ref.comments,\n      hasErrors = _ref.hasErrors,\n      loading = _ref.loading;\n  useEffect(function () {\n    var id = match.params.id;\n    dispatch(fetchComments(id));\n    dispatch(fetchPost(id));\n  }, [dispatch, match]);\n\n  var renderPost = function renderPost() {\n    if (loading.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 30\n      }\n    }, \"Loading post...\");\n    if (hasErrors.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 32\n      }\n    }, \"Unable to display post.\");\n    return /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderComments = function renderComments() {\n    if (loading.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 34\n      }\n    }, \"Loading comments...\");\n    if (hasErrors.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }\n    }, \"Unable to display comments.\");\n    return comments.map(function (comment) {\n      return /*#__PURE__*/React.createElement(Comment, {\n        key: comment.id,\n        comment: comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, renderPost(), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Comments\"), renderComments());\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post.post,\n    comments: state.comments.comments,\n    loading: {\n      post: state.post.loading,\n      comments: state.comments.loading\n    },\n    hasErrors: {\n      post: state.post.hasErrors,\n      comments: state.comments.hasErrors\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(SinglePostPage);","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js"],"names":["React","useEffect","connect","fetchPost","fetchComments","Post","Comment","SinglePostPage","match","dispatch","post","comments","hasErrors","loading","id","params","renderPost","renderComments","map","comment","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOjB;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJZ,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNa,EADM,GACCN,KAAK,CAACO,MADP,CACND,EADM;AAGdL,IAAAA,QAAQ,CAACL,aAAa,CAACU,EAAD,CAAd,CAAR;AACAL,IAAAA,QAAQ,CAACN,SAAS,CAACW,EAAD,CAAV,CAAR;AACD,GALQ,EAKN,CAACL,QAAD,EAAWD,KAAX,CALM,CAAT;;AAOA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIH,OAAO,CAACH,IAAZ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAClB,QAAIE,SAAS,CAACF,IAAd,EAAoB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAEpB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAOA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIJ,OAAO,CAACF,QAAZ,EAAsB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACtB,QAAIC,SAAS,CAACD,QAAd,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AAExB,WAAOA,QAAQ,CAACO,GAAT,CAAa,UAAAC,OAAO;AAAA,0BACzB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,OAAO,CAACL,EAAtB;AAA0B,QAAA,OAAO,EAAEK,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADyB;AAAA,KAApB,CAAP;AAGD,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,EADb,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,cAAc,EAHjB,CADF;AAOD,CAtCD;;AAwCA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCX,IAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWA,IADe;AAEhCC,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeA,QAFO;AAGhCE,IAAAA,OAAO,EAAE;AAAEH,MAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWG,OAAnB;AAA4BF,MAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeE;AAArD,KAHuB;AAIhCD,IAAAA,SAAS,EAAE;AAAEF,MAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWE,SAAnB;AAA8BD,MAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeC;AAAvD;AAJqB,GAAL;AAAA,CAA7B;;AAOA,eAAeV,OAAO,CAACkB,eAAD,CAAP,CAAyBb,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPost } from '../actions/postActions'\nimport { fetchComments } from '../actions/commentsActions'\n\nimport { Post } from '../components/Post'\nimport { Comment } from '../components/Comment'\n\nconst SinglePostPage = ({\n  match,\n  dispatch,\n  post,\n  comments,\n  hasErrors,\n  loading,\n}) => {\n  useEffect(() => {\n    const { id } = match.params\n\n    dispatch(fetchComments(id))\n    dispatch(fetchPost(id))\n  }, [dispatch, match])\n\n  const renderPost = () => {\n    if (loading.post) return <p>Loading post...</p>\n    if (hasErrors.post) return <p>Unable to display post.</p>\n\n    return <Post post={post} />\n  }\n\n  const renderComments = () => {\n    if (loading.comments) return <p>Loading comments...</p>\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\n\n    return comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n  }\n\n  return (\n    <section>\n      {renderPost()}\n      <h2>Comments</h2>\n      {renderComments()}\n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: { post: state.post.loading, comments: state.comments.loading },\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\n})\n\nexport default connect(mapStateToProps)(SinglePostPage)\n"]},"metadata":{},"sourceType":"module"}