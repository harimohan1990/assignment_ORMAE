{"ast":null,"code":"import _slicedToArray from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js\";\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost } from '../actions/postActions';\nimport { fetchComments } from '../actions/commentsActions';\nimport Paginator from 'react-hooks-paginator';\nimport { Post } from '../components/Post';\nimport { Comment } from '../components/Comment';\nimport { fetchData } from '../actions/';\n\nvar SinglePostPage = function SinglePostPage(_ref) {\n  var match = _ref.match,\n      dispatch = _ref.dispatch,\n      post = _ref.post,\n      comments = _ref.comments,\n      hasErrors = _ref.hasErrors,\n      loading = _ref.loading;\n  useEffect(function () {\n    var id = match.params.id;\n    dispatch(fetchComments(id));\n    dispatch(fetchPost(id));\n  }, [dispatch, match]);\n  var pageLimit = 10;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentData = _useState8[0],\n      setCurrentData = _useState8[1];\n\n  var renderPost = function renderPost() {\n    if (loading.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }\n    }, \"Loading post...\");\n    if (hasErrors.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }\n    }, \"Unable to display post.\");\n    return /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchData().then(function (data) {\n      return setData(data);\n    });\n  }, []);\n  useEffect(function () {\n    setCurrentData(data.slice(offset, offset + pageLimit));\n  }, [offset, data]);\n\n  var renderComments = function renderComments() {\n    if (loading.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }\n    }, \"Loading comments...\");\n    if (hasErrors.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }\n    }, \"Unable to display comments.\");\n    return comments.map(function (comment) {\n      return /*#__PURE__*/React.createElement(Comment, {\n        key: comment.id,\n        comment: comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, renderPost(), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Comments\"), renderComments()), /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post.post,\n    comments: state.comments.comments,\n    loading: {\n      post: state.post.loading,\n      comments: state.comments.loading\n    },\n    hasErrors: {\n      post: state.post.hasErrors,\n      comments: state.comments.hasErrors\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(SinglePostPage);","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js"],"names":["React","useEffect","useState","useReducer","connect","fetchPost","fetchComments","Paginator","Post","Comment","fetchData","SinglePostPage","match","dispatch","post","comments","hasErrors","loading","id","params","pageLimit","offset","setOffset","currentPage","setCurrentPage","data","setData","currentData","setCurrentData","renderPost","then","slice","renderComments","map","comment","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect,useState,useReducer} from 'react'\nimport { connect } from 'react-redux';\n\n\nimport { fetchPost } from '../actions/postActions'\nimport { fetchComments } from '../actions/commentsActions'\nimport Paginator from 'react-hooks-paginator';\nimport { Post } from '../components/Post'\nimport { Comment } from '../components/Comment'\nimport { fetchData } from '../actions/';\nconst SinglePostPage = ({match,dispatch,post,comments,hasErrors,loading,}) => {useEffect(() => {\n    const { id } = match.params\n\n    dispatch(fetchComments(id))\n    dispatch(fetchPost(id))\n  }, [dispatch, match])\n  const pageLimit = 10;\n \n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n \n  const renderPost = () => {\n    if (loading.post) return <p>Loading post...</p>\n    if (hasErrors.post) return <p>Unable to display post.</p>\n\n    return <Post post={post} />\n  }\n  useEffect(() => {\n    fetchData().then(data => setData(data));\n  }, []);\n \n  useEffect(() => {\n    setCurrentData(data.slice(offset, offset + pageLimit));\n  }, [offset, data]);\n \n  const renderComments = () => {\n    if (loading.comments) return <p>Loading comments...</p>\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\n\n    return comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n  }\n\n  return (\n    <>\n    <section>\n      {renderPost()}\n      <h2>Comments</h2>\n    \n      {renderComments()}\n    </section>\n    <section>\n   \n    </section>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: { post: state.post.loading, comments: state.comments.loading },\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\n})\n\nexport default connect(mapStateToProps)(SinglePostPage)\n"]},"metadata":{},"sourceType":"module"}