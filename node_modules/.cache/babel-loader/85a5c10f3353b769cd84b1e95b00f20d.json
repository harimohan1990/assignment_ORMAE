{"ast":null,"code":"import _regeneratorRuntime from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var GET_POST = 'GET POSTS';\nexport var GET_POST_SUCCESS = 'GET_POST_SUCCESS';\nexport var GET_POST_FAILURE = 'GET_POST_FAILURE';\nexport var getPost = function getPost() {\n  return {\n    type: GET_POST\n  };\n};\nexport var getPostSuccess = function getPostSuccess(post) {\n  return {\n    type: GET_POST_SUCCESS,\n    payload: post\n  };\n};\nexport var getPostFailure = function getPostFailure() {\n  return {\n    type: GET_POST_FAILURE\n  };\n};\nexport function fetchPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(getPost());\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"http://jsonplaceholder.typicode.com/photos\".concat(id));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              dispatch(getPostSuccess(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(getPostFailure());\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/actions/postActions.js"],"names":["GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPost","type","getPostSuccess","post","payload","getPostFailure","fetchPost","id","dispatch","fetch","response","json","data"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,WAAjB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AAAA,CAAhB;AACP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI;AAAA,SAAK;AACrCF,IAAAA,IAAI,EAAEH,gBAD+B;AAErCM,IAAAA,OAAO,EAAED;AAF4B,GAAL;AAAA,CAA3B;AAIP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAAEJ,IAAAA,IAAI,EAAEF;AAAR,GAAP;AAAA,CAAvB;AAEP,OAAO,SAASO,SAAT,CAAmBC,EAAnB,EAAuB;AAC5B;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAACR,OAAO,EAAR,CAAR;AADK;AAAA;AAAA,qBAIoBS,KAAK,qDACmBF,EADnB,EAJzB;;AAAA;AAIGG,cAAAA,QAJH;AAAA;AAAA,qBAOgBA,QAAQ,CAACC,IAAT,EAPhB;;AAAA;AAOGC,cAAAA,IAPH;AASHJ,cAAAA,QAAQ,CAACN,cAAc,CAACU,IAAD,CAAf,CAAR;AATG;AAAA;;AAAA;AAAA;AAAA;AAWHJ,cAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD","sourcesContent":["export const GET_POST = 'GET POSTS'\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS'\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE'\n\nexport const getPost = () => ({ type: GET_POST })\nexport const getPostSuccess = post => ({\n  type: GET_POST_SUCCESS,\n  payload: post,\n})\nexport const getPostFailure = () => ({ type: GET_POST_FAILURE })\n\nexport function fetchPost(id) {\n  return async dispatch => {\n    dispatch(getPost())\n\n    try {\n      const response = await fetch(\n        `http://jsonplaceholder.typicode.com/photos${id}`\n      )\n      const data = await response.json()\n\n      dispatch(getPostSuccess(data))\n    } catch (error) {\n      dispatch(getPostFailure())\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}