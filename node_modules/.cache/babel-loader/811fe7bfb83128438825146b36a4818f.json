{"ast":null,"code":"import _regeneratorRuntime from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var GET_POSTS = 'GET POSTS';\nexport var GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport var GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\nexport var getPosts = function getPosts() {\n  return {\n    type: GET_POSTS\n  };\n};\nexport var getPostsSuccess = function getPostsSuccess(posts) {\n  return {\n    type: GET_POSTS_SUCCESS,\n    payload: posts\n  };\n};\nexport var getPostsFailure = function getPostsFailure() {\n  return {\n    type: GET_POSTS_FAILURE\n  };\n};\nexport function fetchPosts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(getPosts());\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('https://jsonplaceholder.typicode.com/posts');\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              dispatch(getPostsSuccess(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(getPostsFailure());\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/actions/postsActions.js"],"names":["GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","getPosts","type","getPostsSuccess","posts","payload","getPostsFailure","fetchPosts","dispatch","fetch","response","json","data"],"mappings":";;AAAA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AAAA,CAAjB;AACP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACvCF,IAAAA,IAAI,EAAEH,iBADiC;AAEvCM,IAAAA,OAAO,EAAED;AAF8B,GAAL;AAAA,CAA7B;AAIP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAAEJ,IAAAA,IAAI,EAAEF;AAAR,GAAP;AAAA,CAAxB;AAEP,OAAO,SAASO,UAAT,GAAsB;AAC3B;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AADK;AAAA;AAAA,qBAGoBQ,KAAK,CAAC,4CAAD,CAHzB;;AAAA;AAGGC,cAAAA,QAHH;AAAA;AAAA,qBAIgBA,QAAQ,CAACC,IAAT,EAJhB;;AAAA;AAIGC,cAAAA,IAJH;AAMHJ,cAAAA,QAAQ,CAACL,eAAe,CAACS,IAAD,CAAhB,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHJ,cAAAA,QAAQ,CAACF,eAAe,EAAhB,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAWD","sourcesContent":["export const GET_POSTS = 'GET POSTS'\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE'\n\nexport const getPosts = () => ({ type: GET_POSTS })\nexport const getPostsSuccess = posts => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts,\n})\nexport const getPostsFailure = () => ({ type: GET_POSTS_FAILURE })\n\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(getPosts())\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n      const data = await response.json()\n\n      dispatch(getPostsSuccess(data))\n    } catch (error) {\n      dispatch(getPostsFailure())\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}