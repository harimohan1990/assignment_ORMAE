{"ast":null,"code":"import _slicedToArray from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/PostsPage.js\";\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Pagination from 'reactjs-hooks-pagination';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux';\nimport { MemoryRouter, Route } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport { fetchPosts } from '../actions/postsActions';\nimport { Post } from '../components/Post';\nimport Paginator from 'react-hooks-paginator';\n\nvar PostsPage = function PostsPage(_ref) {\n  var dispatch = _ref.dispatch,\n      loading = _ref.loading,\n      posts = _ref.posts,\n      hasErrors = _ref.hasErrors;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  useEffect(function () {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  var renderPosts = function renderPosts() {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }, \"Loading posts...\");\n    if (hasErrors) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }\n    }, \"Unable to display posts.\");\n    return posts.map(function (post) {\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post.id,\n        post: post,\n        excerpt: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, renderPosts()), /*#__PURE__*/React.createElement(MemoryRouter, {\n    initialEntries: ['/inbox'],\n    initialIndex: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, function (_ref2) {\n    var location = _ref2.location;\n    var query = new URLSearchParams(location.search);\n    var page = parseInt(query.get('page') || '1', 10);\n    return /*#__PURE__*/React.createElement(Pagination, {\n      page: page,\n      count: 10,\n      renderItem: function renderItem(item) {\n        return /*#__PURE__*/React.createElement(PaginationItem, Object.assign({\n          component: Link,\n          to: \"/inbox\".concat(item.page === 1 ? '' : \"?page=\".concat(item.page))\n        }, item, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.posts.loading,\n    posts: state.posts.posts,\n    hasErrors: state.posts.hasErrors\n  };\n};\n\nexport default connect(mapStateToProps)(PostsPage);","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/PostsPage.js"],"names":["React","useEffect","useState","useReducer","Pagination","axios","connect","MemoryRouter","Route","Link","PaginationItem","fetchPosts","Post","Paginator","PostsPage","dispatch","loading","posts","hasErrors","offset","setOffset","currentPage","setCurrentPage","renderPosts","map","post","id","location","query","URLSearchParams","search","page","parseInt","get","item","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,UAAnC,QAAoD,OAApD;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,cAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA6C;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACjChB,QAAQ,CAAC,CAAD,CADyB;AAAA;AAAA,MACtDiB,MADsD;AAAA,MAC9CC,SAD8C;;AAAA,mBAEvBlB,QAAQ,CAAC,CAAD,CAFe;AAAA;AAAA,MAEtDmB,WAFsD;AAAA,MAEzCC,cAFyC;;AAK7DrB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;;AAIA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,QAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACb,QAAIE,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AAEf,WAAOD,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,0BAAI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,OAAO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAAd,CAAP;AACD,GAND;;AAQA,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,WAAW,EAFd,CADA,eAMC,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAE,CAAC,QAAD,CAA9B;AAA0C,IAAA,YAAY,EAAE,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAAkB;AAAA,QAAfI,QAAe,SAAfA,QAAe;AACjB,QAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAd;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACJ,KAAK,CAACK,GAAN,CAAU,MAAV,KAAqB,GAAtB,EAA2B,EAA3B,CAArB;AACA,wBACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,KAAK,EAAE,EAFT;AAGE,MAAA,UAAU,EAAE,oBAACG,IAAD;AAAA,4BACV,oBAAC,cAAD;AACE,UAAA,SAAS,EAAEzB,IADb;AAEE,UAAA,EAAE,kBAAWyB,IAAI,CAACH,IAAL,KAAc,CAAd,GAAkB,EAAlB,mBAAgCG,IAAI,CAACH,IAArC,CAAX;AAFJ,WAGMG,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADU;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAjBH,CADA,CAND,CADF;AA8BD,CA/CD;;AAiDA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCpB,IAAAA,OAAO,EAAEoB,KAAK,CAACnB,KAAN,CAAYD,OADW;AAEhCC,IAAAA,KAAK,EAAEmB,KAAK,CAACnB,KAAN,CAAYA,KAFa;AAGhCC,IAAAA,SAAS,EAAEkB,KAAK,CAACnB,KAAN,CAAYC;AAHS,GAAL;AAAA,CAA7B;;AAMA,eAAeZ,OAAO,CAAC6B,eAAD,CAAP,CAAyBrB,SAAzB,CAAf","sourcesContent":["import React, { useEffect,useState,useReducer} from 'react'\n\nimport Pagination from 'reactjs-hooks-pagination';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux'\nimport { MemoryRouter, Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport PaginationItem from '@material-ui/lab/PaginationItem';\n\nimport { fetchPosts } from '../actions/postsActions'\n\nimport { Post } from '../components/Post'\nimport Paginator from 'react-hooks-paginator';\n\nconst PostsPage = ({ dispatch, loading, posts, hasErrors }) => {\n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n\n\n  useEffect(() => {\n    dispatch(fetchPosts())\n  }, [dispatch])\n\n  const renderPosts = () => {\n    \n    if (loading) return <p>Loading posts...</p>\n    if (hasErrors) return <p>Unable to display posts.</p>\n\n    return posts.map(post => <Post key={post.id} post={post} excerpt />)\n  }\n\n  return (\n    <>\n    <section>\n      \n      {renderPosts()}\n      \n    </section>\n     <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n     <Route>\n       {({ location }) => {\n         const query = new URLSearchParams(location.search);\n         const page = parseInt(query.get('page') || '1', 10);\n         return (\n           <Pagination\n             page={page}\n             count={10}\n             renderItem={(item) => (\n               <PaginationItem\n                 component={Link}\n                 to={`/inbox${item.page === 1 ? '' : `?page=${item.page}`}`}\n                 {...item}\n               />\n             )}\n           />\n         );\n       }}\n     </Route>\n   </MemoryRouter>\n   </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors,\n})\n\nexport default connect(mapStateToProps)(PostsPage)\n"]},"metadata":{},"sourceType":"module"}