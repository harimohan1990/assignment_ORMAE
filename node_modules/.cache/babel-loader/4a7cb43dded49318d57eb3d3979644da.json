{"ast":null,"code":"import _regeneratorRuntime from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var GET_COMMENTS = 'GET COMMENTS';\nexport var GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS';\nexport var GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE';\nexport var getComments = function getComments() {\n  return {\n    type: GET_COMMENTS\n  };\n};\nexport var getCommentsSuccess = function getCommentsSuccess(comments) {\n  return {\n    type: GET_COMMENTS_SUCCESS,\n    payload: comments\n  };\n};\nexport var getCommentsFailure = function getCommentsFailure() {\n  return {\n    type: GET_COMMENTS_FAILURE\n  };\n};\nexport function fetchComments(postId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(getComments());\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(postId));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              dispatch(getCommentsSuccess(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(getCommentsFailure());\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/actions/commentsActions.js"],"names":["GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getComments","type","getCommentsSuccess","comments","payload","getCommentsFailure","fetchComments","postId","dispatch","fetch","response","json","data"],"mappings":";;AAAA,OAAO,IAAMA,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AAAA,CAApB;AACP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AAC7CF,IAAAA,IAAI,EAAEH,oBADuC;AAE7CM,IAAAA,OAAO,EAAED;AAFoC,GAAL;AAAA,CAAnC;AAIP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AAAEJ,IAAAA,IAAI,EAAEF;AAAR,GAAP;AAAA,CAA3B;AAEP,OAAO,SAASO,aAAT,CAAuBC,MAAvB,EAA+B;AACpC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AADK;AAAA;AAAA,qBAIoBS,KAAK,gEAC8BF,MAD9B,EAJzB;;AAAA;AAIGG,cAAAA,QAJH;AAAA;AAAA,qBAOgBA,QAAQ,CAACC,IAAT,EAPhB;;AAAA;AAOGC,cAAAA,IAPH;AASHJ,cAAAA,QAAQ,CAACN,kBAAkB,CAACU,IAAD,CAAnB,CAAR;AATG;AAAA;;AAAA;AAAA;AAAA;AAWHJ,cAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD","sourcesContent":["export const GET_COMMENTS = 'GET COMMENTS'\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS'\nexport const GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE'\n\nexport const getComments = () => ({ type: GET_COMMENTS })\nexport const getCommentsSuccess = comments => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: comments,\n})\nexport const getCommentsFailure = () => ({ type: GET_COMMENTS_FAILURE })\n\nexport function fetchComments(postId) {\n  return async dispatch => {\n    dispatch(getComments())\n\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n      )\n      const data = await response.json()\n\n      dispatch(getCommentsSuccess(data))\n    } catch (error) {\n      dispatch(getCommentsFailure())\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}