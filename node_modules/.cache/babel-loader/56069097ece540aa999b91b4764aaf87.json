{"ast":null,"code":"import _slicedToArray from \"/home/hackersys/Desktop/workspace/React-redux_assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { fetchPost } from '../actions/postActions';\nimport { fetchComments } from '../actions/commentsActions';\nimport { Post } from '../components/Post';\nimport { Comment } from '../components/Comment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n        backgroundColor: themegreen\n      }\n    }\n  };\n});\n\nvar SinglePostPage = function SinglePostPage(_ref) {\n  var match = _ref.match,\n      dispatch = _ref.dispatch,\n      post = _ref.post,\n      comments = _ref.comments,\n      hasErrors = _ref.hasErrors,\n      loading = _ref.loading;\n  useEffect(function () {\n    var id = match.params.id;\n    dispatch(fetchComments(id));\n    dispatch(fetchPost(id));\n  }, [dispatch, match]);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var renderPost = function renderPost() {\n    if (loading.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 30\n      }\n    }, \"Loading post...\");\n    if (hasErrors.post) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }\n    }, \"Unable to display post.\");\n    return /*#__PURE__*/React.createElement(Post, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderComments = function renderComments() {\n    if (loading.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }\n    }, \"Loading comments...\");\n    if (hasErrors.comments) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }\n    }, \"Unable to display comments.\");\n    return comments.map(function (comment) {\n      return /*#__PURE__*/React.createElement(Comment, {\n        key: comment.id,\n        comment: comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, renderPost(), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(Pagination, {\n    count: 10,\n    color: \"standard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), renderComments());\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post.post,\n    comments: state.comments.comments,\n    loading: {\n      post: state.post.loading,\n      comments: state.comments.loading\n    },\n    hasErrors: {\n      post: state.post.hasErrors,\n      comments: state.comments.hasErrors\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(SinglePostPage);","map":{"version":3,"sources":["/home/hackersys/Desktop/workspace/React-redux_assignment/src/pages/SinglePostPage.js"],"names":["React","useEffect","useState","connect","makeStyles","Pagination","fetchPost","fetchComments","Post","Comment","useStyles","theme","root","marginTop","spacing","backgroundColor","themegreen","SinglePostPage","match","dispatch","post","comments","hasErrors","loading","id","params","offset","setOffset","currentPage","setCurrentPage","renderPost","renderComments","map","comment","classes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect,useState} from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { fetchPost } from '../actions/postActions'\nimport { fetchComments } from '../actions/commentsActions'\n\n\nimport { Post } from '../components/Post'\nimport { Comment } from '../components/Comment'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n      backgroundColor:themegreen\n    },\n  },\n}));\n\nconst SinglePostPage = ({match,dispatch,post,comments,hasErrors,loading,}) => {useEffect(() => {\n    const { id } = match.params\n\n    dispatch(fetchComments(id))\n    dispatch(fetchPost(id))\n  }, [dispatch, match])\n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n \n \n  const renderPost = () => {\n    if (loading.post) return <p>Loading post...</p>\n    if (hasErrors.post) return <p>Unable to display post.</p>\n\n    return <Post post={post} />\n  }\n\n  const renderComments = () => {\n    if (loading.comments) return <p>Loading comments...</p>\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\n\n    return comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n  }\n  const classes = useStyles();\n  return (\n  \n    <section>\n     \n      {renderPost()}\n      <h2>Comments</h2>\n      <Pagination count={10}  color=\"standard\" />\n      \n    \n      {renderComments()}\n  \n      \n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: { post: state.post.loading, comments: state.comments.loading },\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\n})\n\nexport default connect(mapStateToProps)(SinglePostPage)\n"]},"metadata":{},"sourceType":"module"}